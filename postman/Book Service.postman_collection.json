{
	"info": {
		"_postman_id": "5b8c2203-f281-4e35-a769-30b3410b2de9",
		"name": "Book Service",
		"description": "## Book Management Service API\n\nКоллекция запросов для REST API библиотеки: создание, получение, обновление и удаление авторов и книг.\n\nИспользуйте [http://localhost:8080](http://localhost:8080) для указания адреса.\n\nПримеры CRUD-операции, работу с параметрами и телом запроса.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44449940",
		"_collection_link": "https://devil-7223879.postman.co/workspace/5fbd2e2f-0e54-4773-86f1-0755a6c4a0d3/collection/44449940-5b8c2203-f281-4e35-a769-30b3410b2de9?action=share&source=collection_link&creator=44449940"
	},
	"item": [
		{
			"name": "Author API",
			"item": [
				{
					"name": "Get author",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9099/authors/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9099",
							"path": [
								"authors",
								"1"
							]
						},
						"description": "Получить автора по ID"
					},
					"response": []
				},
				{
					"name": "Get authors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9099/authors?page=5&size=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9099",
							"path": [
								"authors"
							],
							"query": [
								{
									"key": "page",
									"value": "5"
								},
								{
									"key": "size",
									"value": "2"
								}
							]
						},
						"description": "Получить список авторов с пагинацией"
					},
					"response": []
				},
				{
					"name": "Create author",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Martin K.\",\n    \"birth_year\": 1983\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9099/authors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9099",
							"path": [
								"authors"
							]
						},
						"description": "Создать нового автора"
					},
					"response": []
				}
			],
			"description": "Управление авторами"
		},
		{
			"name": "Book API",
			"item": [
				{
					"name": "Get books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9099/books",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9099",
							"path": [
								"books"
							]
						},
						"description": "Получить список книг"
					},
					"response": []
				},
				{
					"name": "Create book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Высоконагруженные приложения.\",\n    \"author_id\": 11,\n    \"year\": 2017,\n    \"genre\": \"Техническая литература\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9099/books",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9099",
							"path": [
								"books"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Kubernetes для разработчиков\",\n    \"author_id\": 11,\n    \"year\": 2024,\n    \"genre\": \"Техническая литература\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9099/books/51",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9099",
							"path": [
								"books",
								"51"
							]
						},
						"description": "Обновить информацию о книге"
					},
					"response": []
				},
				{
					"name": "Delete data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9099/books/51",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9099",
							"path": [
								"books",
								"51"
							]
						},
						"description": "Удалить книгу"
					},
					"response": []
				},
				{
					"name": "Get book",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9099/books/50",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9099",
							"path": [
								"books",
								"50"
							]
						},
						"description": "Получить книгу по ID"
					},
					"response": []
				}
			],
			"description": "Управление книгами"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		}
	]
}